[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "simcardems"
description = "Simula Cardiac electromechanics solver"
authors = [
    {name = "Henrik Finsberg", email = "henriknf@simula.no"},
    {name = "Ilsbeth van Herck"},
    {name = "CÃ©cile Daversin-Catty"},
]
license = {text = "LGPL-2.1"}
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = ["action potential", "cardiac mechanics", "electrophysiology", "electromechanics"]
requires-python = ">=3.8"
dependencies = [
    "ap-features",
    "cardiac-geometries",
    "cbcbeat",
    "click",
    "fenics-pulse",
    "h5py",
    "matplotlib",
    "numpy<=1.21.5",
    "scipy",
    "tqdm",
    "typing-extensions",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/ComputationalPhysiology/simcardems"

[project.optional-dependencies]
dev = [
    "Sphinx",
    "black",
    "build",
    "bump2version",
    "flake8",
    "ipython",
    "isort",
    "mypy",
    "pdbpp",
    "pip",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "sphinx",
    "twine",
    "wheel",
]
docs = [
    "jupyter-book",
    "jupytext",
    "pandas",
    "plotly",
    "requests",
    "sphinxcontrib-bibtex",
]
gui = [
    "fenics-plotly",
    "streamlit",
]

[project.scripts]
simcardems = "simcardems.cli:cli"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false
license-files = ["LICENSE"]
include-package-data = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.aliases]
test = "pytest"

[tool.pytest.ini_options]
addopts = "--cov=simcardems --cov-report html --cov-report xml --cov-report term-missing -v"
testpaths = ["tests"]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.mypy]
files = ["src/simcardems", "tests"]
ignore_missing_imports = true
exclude = "docs"

[tool.coverage.run]
omit = ["src/simcardems/gui.py"]




[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "demos",
]

# Same as Black.
line-length = 120

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E402", "E741", "E743", "E731"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
